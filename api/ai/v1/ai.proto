syntax = "proto3";

package api.ai;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "validate/validate.proto";

option go_package = "github.com/ydssx/kratos-kit/api/ai/v1;aiv1";

// AI服务接口定义
service AIService {
  // Chat 与AI助手对话
  // rpc Chat(ChatRequest) returns (ChatResponse) {
  //   option (google.api.http) = {
  //     post: "/api/v1/ai/chat"
  //     body: "*"
  //   };
  // }

  // CreateConversation 创建新的对话
  rpc CreateConversation(CreateConversationRequest) returns (CreateConversationResponse) {
    option (google.api.http) = {
      post: "/api/v1/ai/conversations"
      body: "*"
    };
  }

  // ListConversations 获取对话列表
  rpc ListConversations(ListConversationsRequest) returns (ListConversationsResponse) {
    option (google.api.http) = {get: "/api/v1/ai/conversations"};
  }

  // GetConversation 获取对话详情
  rpc GetConversation(GetConversationRequest) returns (GetConversationResponse) {
    option (google.api.http) = {get: "/v1/ai/conversations/{id}"};
  }

  // DeleteConversation 删除对话
  rpc DeleteConversation(DeleteConversationRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {delete: "/v1/ai/conversations/{id}"};
  }

  // UpdateConversation 更新对话信息
  rpc UpdateConversation(UpdateConversationRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      patch: "/v1/ai/conversations/{id}"
      body: "*"
    };
  }

  // GenerateImage 生成图片
  rpc GenerateImage(GenerateImageRequest) returns (GenerateImageResponse) {
    option (google.api.http) = {
      post: "/v1/ai/images/generations"
      body: "*"
    };
  }

  // EditImage 编辑/变体图片
  rpc EditImage(EditImageRequest) returns (GenerateImageResponse) {
    option (google.api.http) = {
      post: "/v1/ai/images/edits"
      body: "*"
    };
  }

  // ListGeneratedImages 获取生成的图片列表
  rpc ListGeneratedImages(ListGeneratedImagesRequest) returns (ListGeneratedImagesResponse) {
    option (google.api.http) = {get: "/v1/ai/images"};
  }

  // Summarize 总结文本
  rpc Summarize(SummarizeRequest) returns (SummarizeResponse) {
    option (google.api.http) = {
      post: "/v1/ai/summarize"
      body: "*"
    };
  }
}

// 聊天请求
message ChatRequest {
  // 对话ID
  int32 conversation_id = 1 [(validate.rules).int32.gt = 0];
  // 用户消息内容
  string content = 2 [(validate.rules).string = {
    min_len: 1
    max_len: 4096
  }];
  // AI模型，可选
  string model = 3;
  // 系统提示词，可选
  string system_prompt = 4;
  // // 是否生成图片
  // bool generate_image = 5;
  // // 图片生成参数，当generate_image为true时有效
  // ImageGenerationParams image_params = 6;
}

// 聊天响应
message ChatResponse {
  // AI助手回复的消息
  Message message = 1;
  // 本次对话使用的token数
  int32 tokens = 2;
  // 生成的图片信息，如果请求包含图片生成则返回
  repeated ImageData generated_images = 3;
}

// 消息
message Message {
  // 消息ID
  int64 id = 1;
  // 消息角色：user/assistant/system
  string role = 2;
  // 消息内容
  string content = 3;
  // 消息token数
  int32 tokens = 4;
  // 消息状态
  int32 status = 5;
  // 创建时间
  int64 created_at = 6;
}

// 创建对话请求
message CreateConversationRequest {
  // 对话标题
  string title = 1 [(validate.rules).string = {
    min_len: 1
    max_len: 255
  }];
  // AI模型
  string model = 2 [(validate.rules).string.min_len = 1];
  // 系统提示词
  string system_prompt = 3;
}

// 创建对话响应
message CreateConversationResponse {
  // 对话ID
  int64 id = 1;
}

// 获取对话列表请求
message ListConversationsRequest {
  // 分页大小
  int32 page_size = 1;
  // 页码
  int32 page = 2;
}

// 对话列表响应
message ListConversationsResponse {
  // 对话列表
  repeated Conversation conversations = 1;
  // 总数
  int32 total = 2;
}

// 对话信息
message Conversation {
  // 对话ID
  int64 id = 1;
  // 对话标题
  string title = 2;
  // AI模型
  string model = 3;
  // 系统提示词
  string system_prompt = 4;
  // 总token数
  int32 total_tokens = 5;
  // 对话状态
  int32 status = 6;
  // 最后消息时间
  int64 last_message_at = 7;
  // 创建时间
  int64 created_at = 8;
  // 最后一条消息
  Message last_message = 9;
}

// 获取对话详情请求
message GetConversationRequest {
  // 对话ID
  int64 id = 1 [(validate.rules).int64.gt = 0];
}

// 获取对话详情响应
message GetConversationResponse {
  // 对话信息
  Conversation conversation = 1;
  // 消息列表
  repeated Message messages = 2;
}

// 删除对话请求
message DeleteConversationRequest {
  // 对话ID
  int64 id = 1 [(validate.rules).int64.gt = 0];
}

// 更新对话请求
message UpdateConversationRequest {
  // 对话ID
  int64 id = 1 [(validate.rules).int64.gt = 0];
  // 对话标题
  string title = 2;
  // 系统提示词
  string system_prompt = 3;
  // 对话状态
  int32 status = 4;
}

// 图片生成请求
message GenerateImageRequest {
  // 图片描述提示词
  string prompt = 1 [(validate.rules).string = {
    min_len: 1
    max_len: 4000
  }];
  // 生成图片数量
  int32 n = 2 [(validate.rules).int32 = {
    gte: 1
    lte: 10
  }];
  // 图片尺寸: 256x256, 512x512, 1024x1024
  string size = 3 [(validate.rules).string = {
    in: [
      "256x256",
      "512x512",
      "1024x1024"
    ]
  }];
  // 图片质量: standard, hd
  string quality = 4 [(validate.rules).string = {
    in: [
      "standard",
      "hd"
    ]
  }];
  // 图片风格: vivid, natural
  string style = 5 [(validate.rules).string = {
    in: [
      "vivid",
      "natural"
    ]
  }];
  // 模型: dall-e-2, dall-e-3
  string model = 6 [(validate.rules).string = {
    in: [
      "dall-e-2",
      "dall-e-3"
    ]
  }];
}

// 图片编辑请求
message EditImageRequest {
  // 原始图片
  bytes image = 1 [(validate.rules).bytes.min_len = 1];
  // 图片描述提示词
  string prompt = 2 [(validate.rules).string = {
    min_len: 1
    max_len: 4000
  }];
  // 遮罩图片，可选
  bytes mask = 3;
  // 生成图片数量
  int32 n = 4 [(validate.rules).int32 = {
    gte: 1
    lte: 10
  }];
  // 图片尺寸
  string size = 5 [(validate.rules).string = {
    in: [
      "256x256",
      "512x512",
      "1024x1024"
    ]
  }];
}

// 图片生成响应
message GenerateImageResponse {
  // 生成时间
  int64 created = 1;
  // 生成的图片列表
  repeated ImageData data = 2;
}

// 图片数据
message ImageData {
  // 图片URL
  string url = 1;
  // 修订后的提示词
  string revised_prompt = 2;
}

// 获取生成图片列表请求
message ListGeneratedImagesRequest {
  // 分页大小
  int32 page_size = 1;
  // 页码
  int32 page = 2;
  // 开始时间
  int64 start_time = 3;
  // 结束时间
  int64 end_time = 4;
}

// 生成图片列表响应
message ListGeneratedImagesResponse {
  // 图片列表
  repeated GeneratedImage images = 1;
  // 总数
  int32 total = 2;
}

// 生成的图片信息
message GeneratedImage {
  // 图片ID
  int64 id = 1;
  // 用户ID
  int64 user_id = 2;
  // 提示词
  string prompt = 3;
  // 图片URL
  string url = 4;
  // 图片尺寸
  string size = 5;
  // 使用的模型
  string model = 6;
  // 图片状态: pending, success, failed
  string status = 7;
  // 创建时间
  int64 created_at = 8;
}

// 图片生成参数
message ImageGenerationParams {
  // 图片尺寸: 256x256, 512x512, 1024x1024
  string size = 1 [(validate.rules).string = {
    in: [
      "256x256",
      "512x512",
      "1024x1024"
    ]
  }];
  // 图片质量: standard, hd
  string quality = 2 [(validate.rules).string = {
    in: [
      "standard",
      "hd"
    ]
  }];
  // 图片风格: vivid, natural
  string style = 3 [(validate.rules).string = {
    in: [
      "vivid",
      "natural"
    ]
  }];
  // 生成数量
  int32 n = 4 [(validate.rules).int32 = {
    gte: 1
    lte: 4
  }];
}

// 总结文本请求
message SummarizeRequest {
  // 文本内容
  string text = 1 [(validate.rules).string = {min_len: 1}];
}

// 总结文本响应
message SummarizeResponse {
  // 总结后的文本
  string summary = 1;
}
